openapi: 3.1.0
info:
  title: Profile Service API
  version: 1.0.0
  description: Handles creation, retrieval, and updates of user profiles.

servers:
  - url: https://api.example.com/profile
    description: Production server
  - url: http://localhost:3003/profile
    description: Local development

tags:
  - name: Profile
    description: Profile management endpoints

paths:
  /me:
    get:
      summary: Get the authenticated user's profile
      operationId: GetMyProfile
      tags: [Profile]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: The user's profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      summary: Update the authenticated user's profile
      operationId: UpdateMyProfile
      tags: [Profile]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProfileInput"
      responses:
        "200":
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /admin/users/{userId}:
    get:
      summary: Admin fetches profile of a user by ID
      operationId: AdminGetUserProfile
      tags: [Profile]
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: false
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested user's profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Profile:
      type: object
      required: [userId, firstName, lastName, email]
      properties:
        userId:
          type: string
          format: uuid
        firstName:
          type: string
          example: Ahmed
        lastName:
          type: string
          example: Benali
        email:
          type: string
          format: email
          example: ahmed@example.com
        phone:
          type: ["string", "null"]
          example: "+213665432100"
        address:
          type: ["string", "null"]
        avatarUrl:
          type: ["string", "null"]
          format: uri
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    UpdateProfileInput:
      type: object
      additionalProperties: false
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        address:
          type: string
        avatarUrl:
          type: string
          format: uri

    ErrorResponse:
      type: object
      required: [message]
      properties:
        message:
          type: string

  responses:
    Unauthorized:
      description: Unauthorized – valid access token required
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    Forbidden:
      description: Forbidden – insufficient permissions
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    BadRequest:
      description: Bad request – validation failed
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
